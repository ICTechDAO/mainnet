syntax = "proto3";
package gauss.fixedprice.v1;

import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "gauss/nft/v1/tx.proto";

option go_package = "github.com/gauss/gauss/v6/x/fixedprice/types";

// Msg defines the Msg service.
service Msg {
    rpc CreateOrder(MsgCreateOrder) returns (MsgCreateOrderResponse);
    rpc DeleteOrder(MsgDeleteOrder) returns (MsgDeleteOrderResponse);
    rpc BidOrder(MsgBidOrder) returns (MsgBidOrderResponse);

}

// create order
message MsgCreateOrder {
    string sender = 1;
    string token_id = 2;
    string pool_address = 3;
    cosmos.base.v1beta1.Coin start_price = 4
    [
        (gogoproto.nullable) = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags) = "yaml:\"start_price\""
    ];
    cosmos.base.v1beta1.Coin end_price = 5
    [
        (gogoproto.nullable) = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags) = "yaml:\"end_price\""
    ];

    google.protobuf.Timestamp start_time = 6
    [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];

    google.protobuf.Timestamp end_time = 7
    [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"end_time\""];
}
message MsgCreateOrderResponse {
}

// delete order
message MsgDeleteOrder {
    string creator = 1;
    string token_id = 2;
    string pool_address = 3;
}

message MsgDeleteOrderResponse {
}


message MsgBidOrder {
    string sender = 1;
    string token_id = 2;
    cosmos.base.v1beta1.Coin price = 3;
    string pool_address = 4;
}

message MsgBidOrderResponse {
}


message Order {
    option (gogoproto.equal) = true;
    string token_id = 1 [(gogoproto.moretags) = "yaml:\"token_id\""];
    cosmos.base.v1beta1.Coin price = 2;
    cosmos.base.v1beta1.Coin start_price = 3;
    cosmos.base.v1beta1.Coin end_price = 4;
    nft.v1.Nft nft = 5;
    google.protobuf.Timestamp start_time = 6
    [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];
    google.protobuf.Timestamp end_time = 7
    [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"end_time\""];
    google.protobuf.Timestamp next_time_adjust_price = 8
    [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"next_time_adjust_price\""];
    string pool_address = 9 [(gogoproto.moretags) = "yaml:\"pool_address\""];
}


message OrderClose {
    string token_id = 1;
}

message OrderPriceAdjust {
    string token_id = 1;
    cosmos.base.v1beta1.Coin price = 2;
}

message PoolAddress {
    string address = 1;
}
