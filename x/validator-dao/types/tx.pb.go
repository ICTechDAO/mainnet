// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gauss/validator-dao/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgReqAuthorization struct {
	Creator    string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Authorizer string     `protobuf:"bytes,2,opt,name=authorizer,proto3" json:"authorizer,omitempty"`
	BizName    string     `protobuf:"bytes,3,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	Fee        types.Coin `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee"`
}

func (m *MsgReqAuthorization) Reset()         { *m = MsgReqAuthorization{} }
func (m *MsgReqAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgReqAuthorization) ProtoMessage()    {}
func (*MsgReqAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{0}
}
func (m *MsgReqAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReqAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReqAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReqAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReqAuthorization.Merge(m, src)
}
func (m *MsgReqAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgReqAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReqAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReqAuthorization proto.InternalMessageInfo

func (m *MsgReqAuthorization) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgReqAuthorization) GetAuthorizer() string {
	if m != nil {
		return m.Authorizer
	}
	return ""
}

func (m *MsgReqAuthorization) GetBizName() string {
	if m != nil {
		return m.BizName
	}
	return ""
}

func (m *MsgReqAuthorization) GetFee() types.Coin {
	if m != nil {
		return m.Fee
	}
	return types.Coin{}
}

type MsgReqAuthorizationResponse struct {
}

func (m *MsgReqAuthorizationResponse) Reset()         { *m = MsgReqAuthorizationResponse{} }
func (m *MsgReqAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReqAuthorizationResponse) ProtoMessage()    {}
func (*MsgReqAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{1}
}
func (m *MsgReqAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReqAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReqAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReqAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReqAuthorizationResponse.Merge(m, src)
}
func (m *MsgReqAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReqAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReqAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReqAuthorizationResponse proto.InternalMessageInfo

type MsgWithdrawAuthorization struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Authorizer string `protobuf:"bytes,2,opt,name=authorizer,proto3" json:"authorizer,omitempty"`
	BizName    string `protobuf:"bytes,3,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
}

func (m *MsgWithdrawAuthorization) Reset()         { *m = MsgWithdrawAuthorization{} }
func (m *MsgWithdrawAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawAuthorization) ProtoMessage()    {}
func (*MsgWithdrawAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{2}
}
func (m *MsgWithdrawAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawAuthorization.Merge(m, src)
}
func (m *MsgWithdrawAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawAuthorization proto.InternalMessageInfo

func (m *MsgWithdrawAuthorization) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgWithdrawAuthorization) GetAuthorizer() string {
	if m != nil {
		return m.Authorizer
	}
	return ""
}

func (m *MsgWithdrawAuthorization) GetBizName() string {
	if m != nil {
		return m.BizName
	}
	return ""
}

type MsgWithdrawAuthorizationResponse struct {
}

func (m *MsgWithdrawAuthorizationResponse) Reset()         { *m = MsgWithdrawAuthorizationResponse{} }
func (m *MsgWithdrawAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawAuthorizationResponse) ProtoMessage()    {}
func (*MsgWithdrawAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{3}
}
func (m *MsgWithdrawAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawAuthorizationResponse.Merge(m, src)
}
func (m *MsgWithdrawAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawAuthorizationResponse proto.InternalMessageInfo

type MsgAddAuthBiz struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BizName string     `protobuf:"bytes,2,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	Fee     types.Coin `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee"`
}

func (m *MsgAddAuthBiz) Reset()         { *m = MsgAddAuthBiz{} }
func (m *MsgAddAuthBiz) String() string { return proto.CompactTextString(m) }
func (*MsgAddAuthBiz) ProtoMessage()    {}
func (*MsgAddAuthBiz) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{4}
}
func (m *MsgAddAuthBiz) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAuthBiz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAuthBiz.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAuthBiz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAuthBiz.Merge(m, src)
}
func (m *MsgAddAuthBiz) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAuthBiz) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAuthBiz.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAuthBiz proto.InternalMessageInfo

func (m *MsgAddAuthBiz) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddAuthBiz) GetBizName() string {
	if m != nil {
		return m.BizName
	}
	return ""
}

func (m *MsgAddAuthBiz) GetFee() types.Coin {
	if m != nil {
		return m.Fee
	}
	return types.Coin{}
}

type MsgAddAuthBizResponse struct {
}

func (m *MsgAddAuthBizResponse) Reset()         { *m = MsgAddAuthBizResponse{} }
func (m *MsgAddAuthBizResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAuthBizResponse) ProtoMessage()    {}
func (*MsgAddAuthBizResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{5}
}
func (m *MsgAddAuthBizResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAuthBizResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAuthBizResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAuthBizResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAuthBizResponse.Merge(m, src)
}
func (m *MsgAddAuthBizResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAuthBizResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAuthBizResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAuthBizResponse proto.InternalMessageInfo

type MsgUpdateAuthBiz struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BizName string     `protobuf:"bytes,2,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	Fee     types.Coin `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee"`
}

func (m *MsgUpdateAuthBiz) Reset()         { *m = MsgUpdateAuthBiz{} }
func (m *MsgUpdateAuthBiz) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAuthBiz) ProtoMessage()    {}
func (*MsgUpdateAuthBiz) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{6}
}
func (m *MsgUpdateAuthBiz) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAuthBiz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAuthBiz.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAuthBiz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAuthBiz.Merge(m, src)
}
func (m *MsgUpdateAuthBiz) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAuthBiz) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAuthBiz.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAuthBiz proto.InternalMessageInfo

func (m *MsgUpdateAuthBiz) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAuthBiz) GetBizName() string {
	if m != nil {
		return m.BizName
	}
	return ""
}

func (m *MsgUpdateAuthBiz) GetFee() types.Coin {
	if m != nil {
		return m.Fee
	}
	return types.Coin{}
}

type MsgUpdateAuthBizResponse struct {
}

func (m *MsgUpdateAuthBizResponse) Reset()         { *m = MsgUpdateAuthBizResponse{} }
func (m *MsgUpdateAuthBizResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAuthBizResponse) ProtoMessage()    {}
func (*MsgUpdateAuthBizResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{7}
}
func (m *MsgUpdateAuthBizResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAuthBizResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAuthBizResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAuthBizResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAuthBizResponse.Merge(m, src)
}
func (m *MsgUpdateAuthBizResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAuthBizResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAuthBizResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAuthBizResponse proto.InternalMessageInfo

type MsgRemoveAuthBiz struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BizName string `protobuf:"bytes,2,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
}

func (m *MsgRemoveAuthBiz) Reset()         { *m = MsgRemoveAuthBiz{} }
func (m *MsgRemoveAuthBiz) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAuthBiz) ProtoMessage()    {}
func (*MsgRemoveAuthBiz) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{8}
}
func (m *MsgRemoveAuthBiz) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAuthBiz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAuthBiz.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAuthBiz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAuthBiz.Merge(m, src)
}
func (m *MsgRemoveAuthBiz) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAuthBiz) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAuthBiz.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAuthBiz proto.InternalMessageInfo

func (m *MsgRemoveAuthBiz) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveAuthBiz) GetBizName() string {
	if m != nil {
		return m.BizName
	}
	return ""
}

type MsgRemoveAuthBizResponse struct {
}

func (m *MsgRemoveAuthBizResponse) Reset()         { *m = MsgRemoveAuthBizResponse{} }
func (m *MsgRemoveAuthBizResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAuthBizResponse) ProtoMessage()    {}
func (*MsgRemoveAuthBizResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_316707d2f66888d4, []int{9}
}
func (m *MsgRemoveAuthBizResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAuthBizResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAuthBizResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAuthBizResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAuthBizResponse.Merge(m, src)
}
func (m *MsgRemoveAuthBizResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAuthBizResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAuthBizResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAuthBizResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgReqAuthorization)(nil), "gauss.validatordao.v1.MsgReqAuthorization")
	proto.RegisterType((*MsgReqAuthorizationResponse)(nil), "gauss.validatordao.v1.MsgReqAuthorizationResponse")
	proto.RegisterType((*MsgWithdrawAuthorization)(nil), "gauss.validatordao.v1.MsgWithdrawAuthorization")
	proto.RegisterType((*MsgWithdrawAuthorizationResponse)(nil), "gauss.validatordao.v1.MsgWithdrawAuthorizationResponse")
	proto.RegisterType((*MsgAddAuthBiz)(nil), "gauss.validatordao.v1.MsgAddAuthBiz")
	proto.RegisterType((*MsgAddAuthBizResponse)(nil), "gauss.validatordao.v1.MsgAddAuthBizResponse")
	proto.RegisterType((*MsgUpdateAuthBiz)(nil), "gauss.validatordao.v1.MsgUpdateAuthBiz")
	proto.RegisterType((*MsgUpdateAuthBizResponse)(nil), "gauss.validatordao.v1.MsgUpdateAuthBizResponse")
	proto.RegisterType((*MsgRemoveAuthBiz)(nil), "gauss.validatordao.v1.MsgRemoveAuthBiz")
	proto.RegisterType((*MsgRemoveAuthBizResponse)(nil), "gauss.validatordao.v1.MsgRemoveAuthBizResponse")
}

func init() { proto.RegisterFile("gauss/validator-dao/v1/tx.proto", fileDescriptor_316707d2f66888d4) }

var fileDescriptor_316707d2f66888d4 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcf, 0x8a, 0xd3, 0x50,
	0x14, 0xc6, 0x9b, 0x69, 0xf1, 0xcf, 0x91, 0x81, 0x21, 0x5a, 0xcc, 0x44, 0xcc, 0x94, 0x20, 0xcc,
	0x20, 0x7a, 0x2f, 0xa9, 0xa0, 0xeb, 0xa9, 0x0b, 0x71, 0x11, 0x17, 0x01, 0x11, 0xdc, 0xe8, 0x4d,
	0x73, 0x4d, 0x2f, 0x98, 0x9c, 0x9a, 0x7b, 0x9b, 0x19, 0xb3, 0xf3, 0x0d, 0x7c, 0x01, 0x1f, 0xc3,
	0x77, 0x98, 0xe5, 0x2c, 0x5d, 0x89, 0xb4, 0x2f, 0x22, 0x49, 0xda, 0x98, 0x68, 0x5a, 0x5a, 0x44,
	0x77, 0x6d, 0xce, 0x77, 0xce, 0xf7, 0xcb, 0xbd, 0x5f, 0x0e, 0x1c, 0x85, 0x6c, 0x26, 0x25, 0x4d,
	0xd9, 0x7b, 0x11, 0x30, 0x85, 0xc9, 0xc3, 0x80, 0x21, 0x4d, 0x1d, 0xaa, 0xce, 0xc9, 0x34, 0x41,
	0x85, 0x7a, 0xbf, 0x10, 0x90, 0x4a, 0x10, 0x30, 0x24, 0xa9, 0x63, 0xde, 0x0a, 0x31, 0xc4, 0x42,
	0x41, 0xf3, 0x5f, 0xa5, 0xd8, 0xb4, 0xc6, 0x28, 0x23, 0x94, 0xd4, 0x67, 0x92, 0xd3, 0xd4, 0xf1,
	0xb9, 0x62, 0x0e, 0x1d, 0xa3, 0x88, 0xcb, 0xba, 0xfd, 0x45, 0x83, 0x9b, 0xae, 0x0c, 0x3d, 0xfe,
	0xe1, 0x74, 0xa6, 0x26, 0x98, 0x88, 0x8c, 0x29, 0x81, 0xb1, 0x6e, 0xc0, 0xd5, 0x71, 0xc2, 0xf3,
	0xf1, 0x86, 0x36, 0xd0, 0x4e, 0xae, 0x7b, 0xab, 0xbf, 0xba, 0x05, 0xc0, 0x96, 0x52, 0x9e, 0x18,
	0x7b, 0x45, 0xb1, 0xf6, 0x44, 0x3f, 0x84, 0x6b, 0xbe, 0xc8, 0xde, 0xc4, 0x2c, 0xe2, 0x46, 0xb7,
	0x6c, 0xf5, 0x45, 0xf6, 0x82, 0x45, 0x5c, 0x77, 0xa0, 0xfb, 0x8e, 0x73, 0xa3, 0x37, 0xd0, 0x4e,
	0x6e, 0x0c, 0x0f, 0x49, 0x89, 0x46, 0x72, 0x34, 0xb2, 0x44, 0x23, 0x4f, 0x51, 0xc4, 0xa3, 0xde,
	0xc5, 0xf7, 0xa3, 0x8e, 0x97, 0x6b, 0xed, 0xbb, 0x70, 0xa7, 0x05, 0xcf, 0xe3, 0x72, 0x8a, 0xb1,
	0xe4, 0x36, 0x82, 0xe1, 0xca, 0xf0, 0x95, 0x50, 0x93, 0x20, 0x61, 0x67, 0xff, 0xfe, 0x15, 0x6c,
	0x1b, 0x06, 0xeb, 0x0c, 0x2b, 0xa8, 0x33, 0xd8, 0x77, 0x65, 0x78, 0x1a, 0x04, 0x79, 0x79, 0x24,
	0xb2, 0x0d, 0x24, 0x75, 0xa7, 0xbd, 0xd6, 0xc3, 0xea, 0xee, 0x70, 0x58, 0xb7, 0xa1, 0xdf, 0x30,
	0xae, 0x88, 0x32, 0x38, 0x70, 0x65, 0xf8, 0x72, 0x1a, 0x30, 0xc5, 0xff, 0x37, 0x94, 0x59, 0x5c,
	0x51, 0xc3, 0xbb, 0xe2, 0x7a, 0x56, 0x70, 0x79, 0x3c, 0xc2, 0xf4, 0xaf, 0xb8, 0x96, 0x26, 0x8d,
	0x41, 0x2b, 0x93, 0xe1, 0xd7, 0x1e, 0x74, 0x5d, 0x19, 0xea, 0x09, 0x1c, 0xfc, 0x11, 0xf3, 0xfb,
	0xa4, 0xf5, 0x63, 0x22, 0x2d, 0x99, 0x33, 0x87, 0xdb, 0x6b, 0x57, 0xde, 0xfa, 0x27, 0x0d, 0xfa,
	0xed, 0xe9, 0xa4, 0xeb, 0xa7, 0xb5, 0x36, 0x98, 0x4f, 0x76, 0x6c, 0xa8, 0x18, 0xde, 0x02, 0xd4,
	0xb2, 0x78, 0x6f, 0xfd, 0x98, 0x5f, 0x2a, 0xf3, 0xc1, 0x36, 0xaa, 0xca, 0x41, 0xc0, 0x7e, 0x33,
	0x5b, 0xc7, 0xeb, 0xdb, 0x1b, 0x42, 0x93, 0x6e, 0x29, 0xac, 0x5b, 0x35, 0xe3, 0x72, 0xbc, 0xe9,
	0x56, 0x6a, 0xc2, 0x4d, 0x56, 0xad, 0xb9, 0x19, 0x3d, 0xbf, 0x98, 0x5b, 0xda, 0xe5, 0xdc, 0xd2,
	0x7e, 0xcc, 0x2d, 0xed, 0xf3, 0xc2, 0xea, 0x5c, 0x2e, 0xac, 0xce, 0xb7, 0x85, 0xd5, 0x79, 0x4d,
	0x43, 0xa1, 0x26, 0x33, 0x9f, 0x8c, 0x31, 0xa2, 0xe5, 0xb6, 0x5e, 0xee, 0xec, 0xc7, 0xf4, 0xfc,
	0xb7, 0xc5, 0xad, 0x3e, 0x4e, 0xb9, 0xf4, 0xaf, 0x14, 0xcb, 0xf6, 0xd1, 0xcf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x8a, 0x7d, 0xce, 0xdc, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	ReqAuthorization(ctx context.Context, in *MsgReqAuthorization, opts ...grpc.CallOption) (*MsgReqAuthorizationResponse, error)
	WithdrawAuthorization(ctx context.Context, in *MsgWithdrawAuthorization, opts ...grpc.CallOption) (*MsgWithdrawAuthorizationResponse, error)
	AddAuthBiz(ctx context.Context, in *MsgAddAuthBiz, opts ...grpc.CallOption) (*MsgAddAuthBizResponse, error)
	UpdateAuthBiz(ctx context.Context, in *MsgUpdateAuthBiz, opts ...grpc.CallOption) (*MsgUpdateAuthBizResponse, error)
	RemoveAuthBiz(ctx context.Context, in *MsgRemoveAuthBiz, opts ...grpc.CallOption) (*MsgRemoveAuthBizResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ReqAuthorization(ctx context.Context, in *MsgReqAuthorization, opts ...grpc.CallOption) (*MsgReqAuthorizationResponse, error) {
	out := new(MsgReqAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/gauss.validatordao.v1.Msg/ReqAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawAuthorization(ctx context.Context, in *MsgWithdrawAuthorization, opts ...grpc.CallOption) (*MsgWithdrawAuthorizationResponse, error) {
	out := new(MsgWithdrawAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/gauss.validatordao.v1.Msg/WithdrawAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddAuthBiz(ctx context.Context, in *MsgAddAuthBiz, opts ...grpc.CallOption) (*MsgAddAuthBizResponse, error) {
	out := new(MsgAddAuthBizResponse)
	err := c.cc.Invoke(ctx, "/gauss.validatordao.v1.Msg/AddAuthBiz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAuthBiz(ctx context.Context, in *MsgUpdateAuthBiz, opts ...grpc.CallOption) (*MsgUpdateAuthBizResponse, error) {
	out := new(MsgUpdateAuthBizResponse)
	err := c.cc.Invoke(ctx, "/gauss.validatordao.v1.Msg/UpdateAuthBiz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveAuthBiz(ctx context.Context, in *MsgRemoveAuthBiz, opts ...grpc.CallOption) (*MsgRemoveAuthBizResponse, error) {
	out := new(MsgRemoveAuthBizResponse)
	err := c.cc.Invoke(ctx, "/gauss.validatordao.v1.Msg/RemoveAuthBiz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	ReqAuthorization(context.Context, *MsgReqAuthorization) (*MsgReqAuthorizationResponse, error)
	WithdrawAuthorization(context.Context, *MsgWithdrawAuthorization) (*MsgWithdrawAuthorizationResponse, error)
	AddAuthBiz(context.Context, *MsgAddAuthBiz) (*MsgAddAuthBizResponse, error)
	UpdateAuthBiz(context.Context, *MsgUpdateAuthBiz) (*MsgUpdateAuthBizResponse, error)
	RemoveAuthBiz(context.Context, *MsgRemoveAuthBiz) (*MsgRemoveAuthBizResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ReqAuthorization(ctx context.Context, req *MsgReqAuthorization) (*MsgReqAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqAuthorization not implemented")
}
func (*UnimplementedMsgServer) WithdrawAuthorization(ctx context.Context, req *MsgWithdrawAuthorization) (*MsgWithdrawAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawAuthorization not implemented")
}
func (*UnimplementedMsgServer) AddAuthBiz(ctx context.Context, req *MsgAddAuthBiz) (*MsgAddAuthBizResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAuthBiz not implemented")
}
func (*UnimplementedMsgServer) UpdateAuthBiz(ctx context.Context, req *MsgUpdateAuthBiz) (*MsgUpdateAuthBizResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthBiz not implemented")
}
func (*UnimplementedMsgServer) RemoveAuthBiz(ctx context.Context, req *MsgRemoveAuthBiz) (*MsgRemoveAuthBizResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAuthBiz not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ReqAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReqAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReqAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.validatordao.v1.Msg/ReqAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReqAuthorization(ctx, req.(*MsgReqAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.validatordao.v1.Msg/WithdrawAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawAuthorization(ctx, req.(*MsgWithdrawAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddAuthBiz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAuthBiz)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAuthBiz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.validatordao.v1.Msg/AddAuthBiz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAuthBiz(ctx, req.(*MsgAddAuthBiz))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAuthBiz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAuthBiz)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAuthBiz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.validatordao.v1.Msg/UpdateAuthBiz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAuthBiz(ctx, req.(*MsgUpdateAuthBiz))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveAuthBiz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveAuthBiz)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveAuthBiz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.validatordao.v1.Msg/RemoveAuthBiz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveAuthBiz(ctx, req.(*MsgRemoveAuthBiz))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gauss.validatordao.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReqAuthorization",
			Handler:    _Msg_ReqAuthorization_Handler,
		},
		{
			MethodName: "WithdrawAuthorization",
			Handler:    _Msg_WithdrawAuthorization_Handler,
		},
		{
			MethodName: "AddAuthBiz",
			Handler:    _Msg_AddAuthBiz_Handler,
		},
		{
			MethodName: "UpdateAuthBiz",
			Handler:    _Msg_UpdateAuthBiz_Handler,
		},
		{
			MethodName: "RemoveAuthBiz",
			Handler:    _Msg_RemoveAuthBiz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gauss/validator-dao/v1/tx.proto",
}

func (m *MsgReqAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReqAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReqAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Fee.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.BizName) > 0 {
		i -= len(m.BizName)
		copy(dAtA[i:], m.BizName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BizName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Authorizer) > 0 {
		i -= len(m.Authorizer)
		copy(dAtA[i:], m.Authorizer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authorizer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReqAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReqAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReqAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BizName) > 0 {
		i -= len(m.BizName)
		copy(dAtA[i:], m.BizName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BizName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Authorizer) > 0 {
		i -= len(m.Authorizer)
		copy(dAtA[i:], m.Authorizer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authorizer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddAuthBiz) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAuthBiz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAuthBiz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Fee.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.BizName) > 0 {
		i -= len(m.BizName)
		copy(dAtA[i:], m.BizName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BizName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAuthBizResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAuthBizResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAuthBizResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAuthBiz) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAuthBiz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAuthBiz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Fee.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.BizName) > 0 {
		i -= len(m.BizName)
		copy(dAtA[i:], m.BizName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BizName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAuthBizResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAuthBizResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAuthBizResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAuthBiz) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAuthBiz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAuthBiz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BizName) > 0 {
		i -= len(m.BizName)
		copy(dAtA[i:], m.BizName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BizName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAuthBizResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAuthBizResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAuthBizResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgReqAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authorizer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BizName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Fee.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgReqAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authorizer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BizName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddAuthBiz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BizName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Fee.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgAddAuthBizResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateAuthBiz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BizName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Fee.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateAuthBizResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveAuthBiz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BizName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveAuthBizResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgReqAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReqAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReqAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorizer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authorizer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReqAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReqAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReqAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorizer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authorizer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAuthBiz) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAuthBiz: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAuthBiz: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAuthBizResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAuthBizResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAuthBizResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAuthBiz) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAuthBiz: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAuthBiz: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAuthBizResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAuthBizResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAuthBizResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAuthBiz) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAuthBiz: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAuthBiz: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAuthBizResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAuthBizResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAuthBizResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
